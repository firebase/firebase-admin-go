name: Continuous Integration
on: pull_request
jobs:

  module:
    name: Module build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [1.12, 1.13, 1.14]

    steps:
    - name: Set up Go ${{ matrix.go }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go }}

    - name: Check out code
      uses: actions/checkout@v2

    - name: Run Linter
      run: |
        go get -u golang.org/x/lint/golint
        GOLINT=`go list -f {{.Target}} golang.org/x/lint/golint`
        $GOLINT -set_exit_status ./...

    - name: Run Unit Tests
      if: success() || failure()
      run: go test -v -race -test.short ./...

    - name: Run Formatter
      run: |
        if [[ ! -z "$(gofmt -l -s .)" ]]; then
          echo "Go code is not formatted:"
          gofmt -d -s .
          exit 1
        fi

    - name: Run Static Analyzer
      run: go vet -v ./...

  gopath:
    name: Gopath build
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}/go

    steps:
    - name: Set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12

    - name: Check out code into GOPATH
      uses: actions/checkout@v2
      with:
        path: go/src/firebase.google.com/go

    - name: Get dependencies
      run: go get -t -v $(go list ./... | grep -v integration)

    - name: Run Unit Tests
      run: go test -v -race -test.short firebase.google.com/go/...
